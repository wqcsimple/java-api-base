group 'com.whis'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        kotlinVersion = '1.2.51'
        springBootVersion = '2.0.3.RELEASE'
        springVersion = '5.0.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
    }
}


apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

bootJar {
    baseName = 'app'
    version =  ''
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
    maven { url "https://jitpack.io" }
}

configurations {
    providedRuntime
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    
    // base
    compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.google.guava:guava:24.0-jre'
    compile 'org.apache.commons:commons-lang3:3.7'
    compile group: 'org.apache.commons', name: 'commons-email', version: '1.5'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.11'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'
    compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.1.10'

    // db
    compile 'mysql:mysql-connector-java:5.1.45'
    compile 'redis.clients:jedis:2.9.0'
    compile 'org.jooq:jooq:3.11.0'
    compile 'org.apache.tomcat:tomcat-jdbc:9.0.5'

    // http request
    compile 'com.squareup.okhttp3:okhttp:3.11.0'

    // spring
    compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1'
    compile group: 'org.springframework', name: 'spring-jdbc', version: "$springVersion"

    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-freemarker:$springBootVersion"
    compile "org.springframework.boot:spring-boot-devtools:$springBootVersion"
    compile "org.springframework.boot:spring-boot-properties-migrator:$springBootVersion"


    // test
    compile("org.springframework.boot:spring-boot-starter-undertow:$springBootVersion")
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    testCompile("org.junit.jupiter:junit-jupiter-api:5.1.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.1")
    testCompile('com.github.sbrannen:spring-test-junit5:1.0.3')
    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
}

task publishBaseJar(type: Jar) {
    // classifier = 'base'
    from sourceSets.main.output
    exclude 'com/whis/app/**'
    exclude 'web/**'
    exclude 'application.properties'
    exclude 'mybatis-config.xml'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            // from components.java

            groupId 'com.whis.base'
            artifactId 'core'
            version '0.1.0'

            artifact publishBaseJar

            pom.withXml { xmlFile ->
                def root = xmlFile.asNode()
                // root.remove(root["dependencyManagement"])
                def dependenciesNode = root.appendNode('dependencies')
                // def dependenciesNode = asNode().getAt("dependencyManagement")[0].getAt("dependencies")[0]
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}

bintray {
    user = "wqc466817823"
    key = "e5c963b7ca6958f7633c17d3c075d8486b5bcb6e" //在"edit profile"的"API key"中

    publications = [ 'mavenJava' ] //上一部分中MavenPublication的列表

    pkg {
        repo = 'whis-base'  // 保留，表示上传bintray中的maven仓库
        group = "com.whis.base"
        name = "base"
        desc = "java base library"
        licenses = ['Apache-2.0']
        websiteUrl = 'https://whis.wang'
        vcsUrl = ''
        labels = ["base"]
        publicDownloadNumbers = true

        version {
            name = "0.1.0"
            desc = "init version"
        }
    }
}

// ./gradlew build bintrayUpload 发布的命令